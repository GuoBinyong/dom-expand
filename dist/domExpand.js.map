{"version":3,"sources":["webpack://domExpand/webpack/universalModuleDefinition","webpack://domExpand/webpack/bootstrap","webpack://domExpand/./src/index.js","webpack://domExpand/./src/Element.js","webpack://domExpand/./src/EventTarget.js","webpack://domExpand/./src/FormData.js","webpack://domExpand/./src/Node.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Element","scrollDistanceFromParent","parentNode","top","this","scrollTop","left","scrollLeft","nextNode","isSameNode","x","y","offsetFromDocument","offsetTop","offsetLeft","offsetParent","distanceToDom","toDom","fromRect","getBoundingClientRect","toRect","propertyDescriptors","isVertical","isVer","globalThis","getComputedStyle","writingMode","computedLineHeight","compStyle","lineHeight","parseFloat","isNaN","fontSize","contentHeight","clientHeight","paddingTop","paddingBottom","contentWidth","clientWidth","paddingLeft","paddingRight","scrollContentHeight","scrollHeight","scrollContentWidth","scrollWidth","numberOfLinesOnClient","numberOfCharsPerLineOnClient","numberOfCharsOnClient","Math","round","numberOfLinesOnScroll","numberOfCharsPerLineOnScroll","numberOfCharsOnScroll","defineProperties","calcClientLengthOfLines","lineNumber","isVisible","length","undefined","visible","boxSizing","setNumberOfLines","lengthInfo","lineLength","lengthStyle","style","width","height","setNumberOfChars","charNumber","charLength","isBorderBox","setNumberOfLinesAndChars","EventTarget","byAddEventListener","event","handler","useCapture","addEventListener","attachEvent","byRemoveEventListener","removeEventListener","detachEvent","byAddListenerForMultipleEvent","eventList","forEach","byRemoveListenerForMultipleEvent","byAddMultipleListenerForEvent","handlerList","byRemoveMultipleListenerForEvent","fdPrototype","FormData","set","append","Node","isChildNodeOf","node","parent","isChildElementOf","element","parentElement","contains","otherNode"],"mappings":"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","file":"domExpand.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"domExpand\"] = factory();\n\telse\n\t\troot[\"domExpand\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import \"./Element\"\r\nimport \"./EventTarget\"\r\nimport \"./FormData\"\r\nimport \"./Node\"","//元素位置距离：开始\n\n\n/**\n * 计算元素相对指定的祖先节点 parentNode 的偏移量\n * @param parentNode : Element  祖先节点\n * @return {x:number,y:number,left:number,top:number}   x、leftL: 水平方向的偏移量；y、top : 垂直方向的偏移量；\n */\nElement.prototype.scrollDistanceFromParent = function (parentNode) {\n  var top = this.scrollTop;\n  var left = this.scrollLeft;\n\n  var nextNode = this.parentNode;\n\n  while (!parentNode.isSameNode(nextNode)) {\n    top += nextNode.scrollTop;\n    left += nextNode.scrollLeft;\n    nextNode = nextNode.parentNode;\n  }\n\n  return {x: left,y: top, left: left, top: top };\n}\n\n\n\n\n\n\n/**\n * 计算元素相对文档的偏移量\n * @return {x:number,y:number,left:number,top:number}   x、leftL: 水平方向的偏移量；y、top : 垂直方向的偏移量；\n */\nElement.prototype.offsetFromDocument = function () {\n  var top = this.offsetTop;\n  var left = this.offsetLeft;\n\n  var nextNode = this.offsetParent;\n\n  while (nextNode) {\n    top += nextNode.offsetTop;\n    left += nextNode.offsetLeft;\n    nextNode = nextNode.offsetParent;\n  }\n\n  return {x: left,y: top, left: left, top: top };\n}\n\n\n\n\n\n\n/**\n * 计算指定元素相对于当前元素之间的可视的距离坐标\n * @param toDom : Element  指定元素\n * @return {x:number,y:number,left:number,top:number}  x、left: 水平方向的的距离；y、top : 垂直方向的距离；\n */\nElement.prototype.distanceToDom = function (toDom) {\n\n  var fromRect = this.getBoundingClientRect();\n  var toRect = toDom.getBoundingClientRect();\n\n  var x = toRect.left - fromRect.left;\n  var y = toRect.top - fromRect.top;\n\n  return {x: x,y: y,left: x,top: y};\n}\n\n\n//元素位置距离：结束\n\n\n\n\n\n\n\n\n\n//元素行字数：开始\n\nlet propertyDescriptors = {\n\n\n  /**\n   * isVertical : boolean  表示元素的内容是否是垂直方向排列\n   */\n  isVertical: {\n    enumerable:false,\n    get:function(){\n      var compStyle = globalThis.getComputedStyle(this);\n      var writingMode =  compStyle.writingMode;\n\n      var isVer = false;\n      switch (writingMode) {\n        case \"vertical-rl\":\n        case \"vertical-lr\":\n        case \"tb-rl\":{\n          isVer = true;\n          break;\n        }\n      }\n\n      return isVer;\n    }\n  },\n\n\n  /**\n   * computedLineHeight : number  返回元素的计算后的行高\n   */\n  computedLineHeight:{\n    enumerable:false,\n    get:function(){\n      var compStyle = globalThis.getComputedStyle(this);\n      var lineHeight =  parseFloat(compStyle.lineHeight);\n\n      if (isNaN(lineHeight)) {\n        var fontSize = parseFloat(compStyle.fontSize);\n        lineHeight = fontSize * 1.2 ;\n      }\n\n      return lineHeight;\n    }\n\n  },\n\n\n  /**\n   * contentHeight : number   元素内容区域的高度\n   */\n  contentHeight: {\n    enumerable: false,\n    get: function(){\n      var compStyle = globalThis.getComputedStyle(this);\n      var clientHeight = this.clientHeight;\n      var paddingTop =  parseFloat(compStyle.paddingTop);\n      var paddingBottom =  parseFloat(compStyle.paddingBottom);\n\n      return clientHeight - paddingTop - paddingBottom;\n    }\n\n  },\n\n  /**\n   * contentWidth : number   元素内容区域的宽度\n   */\n  contentWidth: {\n    enumerable: false,\n    get: function(){\n      var compStyle = globalThis.getComputedStyle(this);\n      var clientWidth = this.clientWidth;\n      var paddingLeft =  parseFloat(compStyle.paddingLeft);\n      var paddingRight =  parseFloat(compStyle.paddingRight);\n\n      return clientWidth - paddingLeft - paddingRight;\n    }\n\n  },\n\n\n\n  /**\n   * scrollContentHeight : number   元素的滑动内容区域的高度\n   */\n  scrollContentHeight: {\n    enumerable: false,\n    get: function(){\n      var compStyle = globalThis.getComputedStyle(this);\n      var scrollHeight = this.scrollHeight;\n      var paddingTop =  parseFloat(compStyle.paddingTop);\n      var paddingBottom =  parseFloat(compStyle.paddingBottom);\n\n      return scrollHeight - paddingTop - paddingBottom;\n    }\n\n  },\n\n\n\n  /**\n   * scrollContentWidth : number   元素的滑动内容区域的宽度\n   */\n  scrollContentWidth: {\n    enumerable: false,\n    get: function(){\n      var compStyle = globalThis.getComputedStyle(this);\n      var scrollWidth = this.scrollWidth;\n      var paddingTop =  parseFloat(compStyle.paddingTop);\n      var paddingBottom =  parseFloat(compStyle.paddingBottom);\n\n      return scrollWidth - paddingTop - paddingBottom;\n    }\n\n  },\n\n\n\n\n  /**\n   * numberOfLinesOnClient : number  返回能在元素的 client 中能显示文字的最大行数\n   */\n  numberOfLinesOnClient: {\n    enumerable: false,\n    get: function () {\n      var length = this.isVertical ? this.contentWidth : this.contentHeight ;\n      return length / (this.computedLineHeight);\n    }\n\n  },\n\n\n  /**\n   * numberOfCharsPerLineOnClient : number  返回能在元素的 client 中每行能显示文字的最大字数\n   */\n  numberOfCharsPerLineOnClient: {\n    enumerable: false,\n    get: function () {\n      var compStyle = globalThis.getComputedStyle(this);\n      var fontSize = parseFloat(compStyle.fontSize);\n\n      var length = this.isVertical ? this.contentHeight : this.contentWidth ;\n      return length / fontSize;\n    }\n\n  },\n\n\n\n  /**\n   * numberOfCharsOnClient : number  返回能在元素的 client 中能显示文字的最大字数\n   * 注意：\n   * 该值是 对 numberOfLinesOnClient 和 numberOfCharsPerLineOnClient 四舍五入后的乘积\n   */\n  numberOfCharsOnClient: {\n    enumerable: false,\n    get: function () {\n      var roundLineNum = Math.round(this.numberOfLinesOnClient);\n      var roundCharNum = Math.round(this.numberOfCharsPerLineOnClient);\n\n      return roundLineNum * roundCharNum;\n    }\n\n  },\n\n\n\n\n  /**\n   * numberOfLinesOnScroll : number  返回能在元素的 滑动区域 中能显示文字的最大行数\n   */\n  numberOfLinesOnScroll: {\n    enumerable: false,\n    get: function () {\n      var length = this.isVertical ? this.scrollContentWidth : this.scrollContentHeight ;\n      return length / (this.computedLineHeight);\n    }\n\n  },\n\n\n  /**\n   * numberOfCharsPerLineOnScroll : number  返回能在元素的  滑动区域 中每行能显示文字的最大字数\n   */\n  numberOfCharsPerLineOnScroll: {\n    enumerable: false,\n    get: function () {\n      var compStyle = globalThis.getComputedStyle(this);\n      var fontSize = parseFloat(compStyle.fontSize);\n      var length = this.isVertical ? this.scrollContentHeight : this.scrollContentWidth ;\n      return length / fontSize;\n    }\n\n  },\n\n\n\n\n  /**\n   * numberOfCharsOnClient : number  返回能在元素的 滑动区域 中能显示文字的最大字数\n   * 注意：\n   * 该值是 对 numberOfLinesOnScroll 和 numberOfCharsPerLineOnScroll 四舍五入后的乘积\n   */\n  numberOfCharsOnScroll: {\n    enumerable: false,\n    get: function () {\n      var roundLineNum = Math.round(this.numberOfLinesOnScroll);\n      var roundCharNum = Math.round(this.numberOfCharsPerLineOnScroll);\n\n      return roundLineNum * roundCharNum;\n    }\n\n  },\n\n};\n\n\n\nObject.defineProperties(Element.prototype,propertyDescriptors);\n\n\n\n\n\n\n\n/**\n * calcClientLengthOfLines(lineNumber)\n * 计算刚好容纳指定的 行数 时 元素的尺寸\n * @param lineNumber : number  行数\n */\nElement.prototype.calcClientLengthOfLines = function (lineNumber) {\n\n  var isVisible = this.isVisible ;\n  var length = 0;\n\n  if (lineNumber == undefined) {\n    return {length:length, visible:isVisible} ;\n  }\n\n\n\n  length = this.computedLineHeight * lineNumber;\n\n\n  var compStyle = globalThis.getComputedStyle(this);\n  var boxSizing = compStyle.boxSizing;\n  var isBorderBox = boxSizing == \"border-box\" ;\n\n\n  if (isBorderBox) {\n\n    if (isVisible) {\n      var paddingLeft = parseFloat(compStyle.paddingLeft);\n      var paddingRight = parseFloat(compStyle.paddingRight);\n      length = length + paddingLeft + paddingRight ;\n    }else {\n      var paddingTop = parseFloat(compStyle.paddingTop);\n      var paddingBottom = parseFloat(compStyle.paddingBottom);\n      length = length + paddingTop + paddingBottom ;\n    }\n\n  }\n\n  return {length:length, visible:isVisible} ;\n\n}\n\n\n\n\n\n\n\n/**\n * setNumberOfLines(lineNumber)\n * 给元素设置相应的尺寸以使能刚好容纳指定的 行数\n * @param lineNumber : number | undefined | null    行数 ; 当值为 undefined | null 时，清除之前关于行数的设置\n */\nElement.prototype.setNumberOfLines = function (lineNumber) {\n\n  var lengthInfo = this.calcClientLengthOfLines(lineNumber);\n  var isVisible = lengthInfo.visible ;\n  var lineLength = lengthInfo.length ;\n\n  if (lineNumber == undefined) { //如果没传任何值；则清除相关的内联样式\n\n    if (isVisible) {\n      this.style.width = null ;\n    }else {\n      this.style.height = null ;\n    }\n\n    return\n  }\n\n\n  var lengthStyle =  lineLength + \"px\" ;\n\n  if (isVisible) {\n    this.style.width = lengthStyle ;\n\n  }else {\n    this.style.height = lengthStyle ;\n  }\n\n\n}\n\n\n\n\n\n\n/**\n * setNumberOfChars(charNumber)\n * 给元素设置相应的尺寸以使每行能刚好容纳指定的 字数\n * @param charNumber : number | undefined | null    字数 ; 当值为 undefined | null 时，清除之前关于字数的设置\n */\nElement.prototype.setNumberOfChars = function (charNumber) {\n\n  var isVisible = this.isVisible ;\n\n  if (charNumber == undefined) { //如果没传任何值；则清除相关的内联样式\n\n    if (isVisible) {\n      this.style.height = null ;\n    }else {\n      this.style.width = null ;\n    }\n    return\n  }\n\n\n  var charLength = charNumber + \"em\";\n\n\n  var compStyle = globalThis.getComputedStyle(this);\n  var boxSizing = compStyle.boxSizing;\n  var isBorderBox = boxSizing == \"border-box\" ;\n\n\n\n  if (isVisible) {\n\n    if (isBorderBox) {\n\n      var paddingTop = compStyle.paddingTop;\n      var paddingBottom = compStyle.paddingBottom;\n\n      charLength = \"calc( \" + charLength + \" + \" + paddingTop + \" + \" + paddingBottom + \" )\" ;\n    }\n\n    this.style.height = charLength ;\n\n\n  }else {\n\n    if (isBorderBox) {\n\n      var paddingLeft = compStyle.paddingLeft;\n      var paddingRight = compStyle.paddingRight;\n\n      charLength = \"calc( \" + charLength + \" + \" + paddingLeft + \" + \" + paddingRight + \" )\" ;\n    }\n\n    this.style.width = charLength ;\n\n  }\n\n\n}\n\n\n\n\n\n\n\n\n/**\n * setNumberOfLinesAndChars(lineNumber,charNumber)\n * @param lineNumber : number | undefined | null    行数 ; 当值为 undefined | null 时，清除之前关于行数的设置\n * @param charNumber : number | undefined | null    字数 ; 当值为 undefined | null 时，清除之前关于字数的设置\n */\nElement.prototype.setNumberOfLinesAndChars = function (lineNumber,charNumber) {\n  this.setNumberOfLines(lineNumber);\n  this.setNumberOfChars(charNumber);\n}\n\n\n\n//元素行字数：结束\n\n\n","if (!globalThis.EventTarget) {\n  /*\n  * 目前发现在Ios8的浏览器中是没有 EventTarget 类型的，Node 类型直接继承 Object ；\n  * */\n  globalThis.EventTarget = Object;\n}\n\n\n/*\n* 使用属性描述来定义属性，为了解决给 Object.prototype 添加属性会在Vue中报错的问题，需要将属性设置为不可枚举的；\n* */\nlet propertyDescriptors = {\n  /**\n   * 兼容方法：为事件添加事件处理器\n   * @param event : string 必需。描述事件名称的字符串。注意： 不要使用 \"on\" 前缀。例如，使用 \"click\" 来取代 \"onclick\"。\n   * @param handler : function  必需。描述了事件触发后执行的函数。\n   * @param useCapture : boolean 可选。布尔值，指定事件是否 在捕获或冒泡阶段执行。\n   */\n  byAddEventListener: {\n    enumerable: false,\n    value: function (event, handler, useCapture) {\n      if (this.addEventListener) {\n        this.addEventListener(event, handler, useCapture);\n      } else if (this.attachEvent) {\n        this.attachEvent(\"on\" + event, handler);\n      } else {\n        this[\"on\" + event] = handler;\n      }\n    }\n  },\n\n  /**\n   * 兼容方法：移除事件处理器\n   * @param event : string 必须。要移除的事件名称。注意： 不要使用 \"on\" 前缀。例如，使用 \"click\" 来取代 \"onclick\"。\n   * @param handler : function  必须。指定要移除的函数。\n   * @param useCapture : boolean 可选。布尔值，指定移除事件句柄的阶段。\n   */\n  byRemoveEventListener: {\n    enumerable: false,\n    value: function (event, handler, useCapture) {\n      if (this.removeEventListener) {\n        this.removeEventListener(event, handler, useCapture);\n      } else if (this.attachEvent) {\n        this.detachEvent(\"on\" + event, handler);\n      } else {\n        this[\"on\" + event] = null;\n      }\n    }\n  },\n\n\n\n  /**\n   * 兼容方法：为多个事件添加事件处理器\n   * @param eventList : Array<string> 必需。事件名称数组。注意： 不要使用 \"on\" 前缀。例如，使用 \"click\" 来取代 \"onclick\"。\n   * @param handler : function  必需。描述了事件触发后执行的函数。\n   * @param useCapture : boolean 可选。布尔值，指定事件是否 在捕获或冒泡阶段执行。\n   */\n  byAddListenerForMultipleEvent: {\n    enumerable: false,\n    value: function (eventList, handler, useCapture) {\n      eventList.forEach((event)=>{\n        this.byAddEventListener(event,handler,useCapture);\n      });\n    }\n  },\n\n\n\n  /**\n   * 兼容方法：移除事件处理器\n   * @param eventList : Array<string> 必需。需要移除的事件名称数组。注意： 不要使用 \"on\" 前缀。例如，使用 \"click\" 来取代 \"onclick\"。\n   * @param handler : function  必须。指定要移除的函数。\n   * @param useCapture : boolean 可选。布尔值，指定移除事件句柄的阶段。\n   */\n  byRemoveListenerForMultipleEvent: {\n    enumerable: false,\n    value: function (eventList, handler, useCapture) {\n      eventList.forEach((event)=>{\n        this.byRemoveEventListener(event,handler,useCapture);\n      });\n    }\n  },\n\n\n\n\n\n  /**\n   * 兼容方法：为单个事件添加多个事件处理器\n   * @param event : string 必需。描述事件名称的字符串。注意： 不要使用 \"on\" 前缀。例如，使用 \"click\" 来取代 \"onclick\"。\n   * @param handlerList : Array<function>  必需。需要添加的事件处理器数组。\n   * @param useCapture : boolean 可选。布尔值，指定事件是否 在捕获或冒泡阶段执行。\n   */\n  byAddMultipleListenerForEvent: {\n    enumerable: false,\n    value: function (event, handlerList, useCapture) {\n      handlerList.forEach((handler)=>{\n        this.byAddEventListener(event,handler,useCapture);\n      });\n    }\n  },\n\n\n\n  /**\n   * 兼容方法：移除事件处理器\n   * @param event : string 必须。要移除的事件名称。注意： 不要使用 \"on\" 前缀。例如，使用 \"click\" 来取代 \"onclick\"。\n   * @param handlerList : Array<function>  必需。需要移除的事件处理器数组。\n   * @param useCapture : boolean 可选。布尔值，指定移除事件句柄的阶段。\n   */\n  byRemoveMultipleListenerForEvent: {\n    enumerable: false,\n    value: function (event, handlerList, useCapture) {\n      handlerList.forEach((handler)=>{\n        this.byRemoveEventListener(event,handler,useCapture);\n      });\n    }\n  },\n\n\n\n\n};\n\n\nObject.defineProperties(EventTarget.prototype, propertyDescriptors);\n\n\n","var fdPrototype = FormData.prototype\n\n\n\n// 在较低版本的浏览器中(比如：IOS10中的Safari)，FormData 类只有一个实例方法 append ，在这种情况下，只能把 set 操作 当作 append 来用\nif (!fdPrototype.set){\n  fdPrototype.set = fdPrototype.append\n}\n","/**\n * isChildNodeOf(node)\n * 判断 当前节点 是否是 其它节点node 的 子节点 或 后代节点\n * @param node : Node    被检测的节点\n * @returns boolean\n */\nNode.prototype.isChildNodeOf = function isChildNodeOf(node) {\n  var parent = this.parentNode;\n  if (parent){\n    if (node.isSameNode(parent)) {\n      return true;\n    }else {\n      return parent.isChildNodeOf(node);\n    }\n  } else {\n    return false;\n  }\n}\n\n\n\n\n\n/**\n * isChildElementOf(element)\n * 判断 当前元素 是否是 其它元素element 的 子元素 或 后代元素\n * @param element : Node    被检测的元素\n * @returns boolean\n */\nNode.prototype.isChildElementOf = function isChildElementOf(element) {\n  var parent = this.parentElement;\n  if (parent){\n    if (element.isSameNode(parent)) {\n      return true;\n    }else {\n      return parent.isChildElementOf(element);\n    }\n  } else {\n    return false;\n  }\n}\n\n\n\n\n//兼容：开始\n\n\n/**\n * contains(otherNode)\n * contains(otherNode) 返回的是一个布尔值，来表示传入的节点是否为该节点的后代节点。\n * @param otherNode : Node      是否是当前节点的后代节点.\n * @returns boolean     如果 otherNode 是 node 的后代节点或是 node 节点本身.则返回true , 否则返回 false.\n */\nif (!Node.prototype.contains) {\n  Node.prototype.contains = function contains(otherNode) {\n    return this.isSameNode(otherNode) || otherNode.isChildNodeOf(this);\n  }\n}\n\n//兼容：结束\n\n"],"sourceRoot":""}